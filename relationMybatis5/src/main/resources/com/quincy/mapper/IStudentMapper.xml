<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace=绑定一个对应的DAO/Mapper接口-->
<mapper namespace="com.quincy.mapper.IStudentMapper">
    <!--思路:1、查询所有的学生信息  2、根据查询出来的学生的tid,寻找对应的老师 子查询-->
<!--    <select id="getStudents" resultMap="student_teacher">-->
<!--        select * from student;-->
<!--    </select>-->

<!--    <resultMap id="student_teacher" type="student">-->
<!--        <result property="id" column="id"/>-->
<!--        <result property="name" column="name"/>-->
<!--        &lt;!&ndash;复杂属性,需要单独处理-->
<!--            1、对象：association-->
<!--            2、集合：collection-->
<!--        &ndash;&gt;-->

<!--        &lt;!&ndash;查询嵌套处理&ndash;&gt;-->
<!--        <association property="teacher" column="tid" javaType="teacher" select="getTeachers"/>-->
<!--    </resultMap>-->

<!--    <select id="getTeachers" resultType="teacher">-->
<!--        select * from teacher where id = #{tid};-->
<!--    </select>-->

    <!--=========================================================================-->
    <!--按照结果的嵌套处理-->
    <select id="getStudents" resultMap="studentTeacher">
        select s.id sid,s.name sname,t.name tname ,t.id tid from student s,teacher t where s.tid = t.id;
    </select>

    <resultMap id="studentTeacher" type="student">
        <result property="id" column="sid"/>
        <result property="name" column="sname"/>
        <association property="teacher" javaType="teacher">
            <result property="name" column="tname"/>
            <result property="id" column="tid"/>
        </association>
    </resultMap>

</mapper>
